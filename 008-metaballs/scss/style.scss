@mixin clearfix() {
  &::after,
  &::before {
    content: '';
    display: table;
  }

  &::after {
    clear: both;
  }
}

html {
  box-sizing: border-box;
}
*, *:before, *:after {
  box-sizing: inherit;
}

.page {
  min-height: 100vh;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  background-color: #000;
}

.animation-layer {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 400px;
  height: 400px;
  margin-top: -200px;
  margin-left: -200px;
  background-color: inherit;
  filter: contrast(25);
}

.centered {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.ball {
  width: 90px;
  height: 90px;
  border-radius: 50%;
  background-color: #fff;
  filter: blur(15px);
}

@for $i from 1 through 8 {
  .buble-#{$i} {
    position: absolute;
    top: 20px;
    left: 20px;
    transform: rotate( (random(300)) + deg );
    width: 50px;
    height: 50px;

    &::after {
      content: '';
      position: absolute;
      transform-origin: (40 - $i * 3) + px (40 - $i * 3) + px;
      width: 50px;
      height: 50px;
      border-radius: 50%;
      background-color: #fff;
      filter: blur(5px);
      animation: rotate (2.5 + $i / 5) + s ease-in-out ($i / 5) + s infinite;
    }
  }
}

@for $i from 1 through 10 {
  .blob-#{$i} {
    position: absolute;
    top: 38px;
    left: 38px;
    transform: rotate( (random(300)) + deg );
    width: (7 + $i) + px;
    height: (7 + $i) + px;

    &::after {
      content: '';
      position: absolute;
      display: block;
      transform-origin: (60 - $i * 2) + px (60 - $i * 2) + px;
      width: (7 + $i) + px;
      height: (7 + $i) + px;
      border-radius: 50%;
      background-color: #fff;
      filter: blur(3px);
      animation: rotate (3.5 + $i / 5) + s ease-in-out ($i / 5) + s infinite;
    }
  }
}

@keyframes rotate {
  0% {
    transform: rotate(0deg) translate3d(0, 0, 0);
  }
  100% {
    transform: rotate(360deg) translate3d(0, 0, 0);
  }
}